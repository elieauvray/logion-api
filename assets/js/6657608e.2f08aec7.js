"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[140],{5318:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var o=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),m=s(n),u=a,f=m["".concat(c,".").concat(u)]||m[u]||p[u]||i;return n?o.createElement(f,l(l({ref:t},d),{},{components:n})):o.createElement(f,l({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var r={};for(var c in t)hasOwnProperty.call(t,c)&&(r[c]=t[c]);r.originalType=e,r.mdxType="string"==typeof e?e:a,l[1]=r;for(var s=2;s<i;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2049:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var o=n(5773),a=n(808),i=(n(7378),n(5318)),l=["components"],r={sidebar_position:4,description:"How to request and access to LOC."},c="Legal Officer Case (LOC)",s={unversionedId:"client/loc",id:"client/loc",title:"Legal Officer Case (LOC)",description:"How to request and access to LOC.",source:"@site/docs/client/loc.md",sourceDirName:"client",slug:"/client/loc",permalink:"/logion-api/docs/client/loc",draft:!1,editUrl:"https://github.com/logion-network/logion-api/tree/main/website/docs/client/loc.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"How to request and access to LOC."},sidebar:"tutorialSidebar",previous:{title:"Protection and Recovery",permalink:"/logion-api/docs/client/protection"}},d={},p=[{value:"State",id:"state",level:2},{value:"Transaction LOC",id:"transaction-loc",level:2},{value:"Lifecycle",id:"lifecycle",level:3},{value:"Request",id:"request",level:3},{value:"Metadata",id:"metadata",level:3},{value:"Collection LOC",id:"collection-loc",level:2},{value:"Lifecycle",id:"lifecycle-1",level:3},{value:"Request",id:"request-1",level:3},{value:"Collection Item",id:"collection-item",level:3},{value:"Collection WITHOUT upload support",id:"collection-without-upload-support",level:4},{value:"Collection WITH upload support",id:"collection-with-upload-support",level:4}],m={toc:p};function u(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,o.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"legal-officer-case-loc"},"Legal Officer Case (LOC)"),(0,i.kt)("h2",{id:"state"},"State"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"An ",(0,i.kt)("a",{parentName:"p",href:"/logion-api/docs/client/authentication"},"authenticated client")," is necessary for all LOC operations.")),(0,i.kt)("p",null,"The global state of LOCs can be obtained (and later on, refreshed) with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const locsState = await client.locsState();\nconst refreshedState = await locsState.refresh();\n")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"All user operations (",(0,i.kt)("inlineCode",{parentName:"p"},"requestTransactionLoc"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"requestCollectionLoc"),", etc.), as well as ",(0,i.kt)("inlineCode",{parentName:"p"},"refresh"),", do return a new state.\nAlways use the most recent state, and discard the former state.\nIn the example above, the var ",(0,i.kt)("inlineCode",{parentName:"p"},"locsState")," must not be used any more as soon as ",(0,i.kt)("inlineCode",{parentName:"p"},"refreshedState")," is available.")),(0,i.kt)("h2",{id:"transaction-loc"},"Transaction LOC"),(0,i.kt)("h3",{id:"lifecycle"},"Lifecycle"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Loc State",src:n(8294).Z,width:"475",height:"774"})),(0,i.kt)("h3",{id:"request"},"Request"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'const pendingRequest = await locsState.requestTransactionLoc({\n    legalOfficer: alice,\n    description: "This is a Transaction LOC",\n    userIdentity: {\n        email: "john.doe@invalid.domain",\n        firstName: "John",\n        lastName: "Doe",\n        phoneNumber: "+1234",\n    },\n});\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The user identity must not be added when the requesting account is protected by the legal officer")),(0,i.kt)("p",null,"Then you have to wait for the LO to open the LOC:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const openLoc = await pendingRequest.refresh() as OpenLoc;\n")),(0,i.kt)("h3",{id:"metadata"},"Metadata"),(0,i.kt)("p",null,"Metadata can be added to, or removed from, an open LOC:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="addMetadata"',title:'"addMetadata"'},'openLoc = await openLoc.addMetadata({\n    name: "Some name",\n    value: "Some value"\n});\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="deleteMetadata"',title:'"deleteMetadata"'},'openLoc = await openLoc.deleteMetadata({\n    name: "Some name"\n});\n')),(0,i.kt)("h2",{id:"collection-loc"},"Collection LOC"),(0,i.kt)("h3",{id:"lifecycle-1"},"Lifecycle"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Collection Loc State",src:n(3237).Z,width:"632",height:"789"})),(0,i.kt)("h3",{id:"request-1"},"Request"),(0,i.kt)("p",null,"A Collection LOC can be requested to a given Legal Officer by providing a description."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'const pendingRequest = await locsState.requestCollectionLoc({\n    legalOfficer: alice,\n    description: "This is a Collection LOC",\n    userIdentity: {\n        email: "john.doe@invalid.domain",\n        firstName: "John",\n        lastName: "Doe",\n        phoneNumber: "+1234",\n    },\n});\n')),(0,i.kt)("p",null,"Then you have to wait for the LO to open and close the LOC:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const openLoc = await pendingRequest.refresh() as OpenLoc;\nconst closedLoc = await openLoc.refresh() as ClosedCollectionLoc;\n")),(0,i.kt)("h3",{id:"collection-item"},"Collection Item"),(0,i.kt)("p",null,"When opening the Collection LOC, the LO decides if it supports file upload or not."),(0,i.kt)("h4",{id:"collection-without-upload-support"},"Collection WITHOUT upload support"),(0,i.kt)("p",null,"Add an item to the collection:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Add Item"',title:'"Add','Item"':!0},'const itemId = "0xc53447c3d4e9d94d6f4ab926378c5b14bd66e28af619d4dcb066c862f8aeb455"; // SHA256 hash of "first-collection-item" (without the quotes)\nconst itemDescription = "First collection item";\nconst itemFileContent = "test";\nconst itemFileHash = hash(itemFileContent);\nclosedLoc = await closedLoc.addCollectionItem({\n    itemId,\n    itemDescription,\n    signer: state.signer\n});\n')),(0,i.kt)("p",null,"Later on, you can retrieve the item with its ID:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Get an Item"',title:'"Get',an:!0,'Item"':!0},"const item = await closedLoc.getCollectionItem({ itemId });\n")),(0,i.kt)("h4",{id:"collection-with-upload-support"},"Collection WITH upload support"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Add Item and provide file content"',title:'"Add',Item:!0,and:!0,provide:!0,file:!0,'content"':!0},'const firstItemId = hashString("first-collection-item");\nconst firstItemDescription = "First collection item";\nconst firstFileContent = "test";\nconst firstFileHash = hashString(firstFileContent);\nconst firstItemToken: ItemTokenWithRestrictedType = {\n    type: "ethereum_erc721",\n    id: \'{"contract":"0x765df6da33c1ec1f83be42db171d7ee334a46df5","id":"4391"}\'\n};\nclosedLoc = await closedLoc.addCollectionItem({\n    itemId: firstItemId,\n    itemDescription: firstItemDescription,\n    signer: state.signer,\n    itemFiles: [\n        new ItemFileWithContent({\n            name: "test.txt",\n            contentType: MimeType.from("text/plain"),\n            hashOrContent: HashOrContent.fromContent(Buffer.from(firstFileContent)), // Let SDK compute hash and size\n        })\n    ],\n    itemToken: firstItemToken,\n    restrictedDelivery: true,\n});\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Add Item and provide hash and size"',title:'"Add',Item:!0,and:!0,provide:!0,hash:!0,'size"':!0},'const secondItemId = hashString("second-collection-item");\nconst secondItemDescription = "Second collection item";\nconst secondFileContent = "test2";\nconst secondFileHash = hashString(secondFileContent);\nclosedLoc = await closedLoc.addCollectionItem({\n    itemId: secondItemId,\n    itemDescription: secondItemDescription,\n    signer: state.signer,\n    itemFiles: [\n        new ItemFileWithContent({\n            name: "test2.txt",\n            contentType: MimeType.from("text/plain"),\n            hashOrContent: HashOrContent.fromHash(secondFileHash), // No content, must upload later\n            size: 5n, // No content, must provide size\n        })\n    ]\n});\n')))}u.isMDXComponent=!0},3237:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/collection-state-a159ea83b7eb3b88e51aadd806186363.png"},8294:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/loc-state-ed123aeb8fb09835762a183154f86a1c.png"}}]);